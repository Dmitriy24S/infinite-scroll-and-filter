{"version":3,"sources":["App.js","index.js"],"names":["App","useState","posts","setPosts","loading","setloading","page","fetchPosts","a","fetch","response","json","data","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","console","log","setTimeout","useEffect","addEventListener","removeEventListener","loader","className","type","placeholder","map","post","id","title","body","ReactDOM","render","StrictMode","getElementById"],"mappings":"uPA6EeA,MA3Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAGIC,EAAO,EAELC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBH,GAAW,GADM,SAEMI,MAAM,qDAAD,OALlB,EAKkB,kBAC0CH,IAHrD,cAEXI,EAFW,gBAKEA,EAASC,OALX,OAKXC,EALW,OAMjBT,GAAS,SAACD,GAAD,4BAAeA,GAAf,YAAyBU,OAClCP,GAAW,GAPM,2CAAH,qDAmBhB,SAASQ,IAELC,OAAOC,YAAcC,SAASC,gBAAgBC,YAC9CF,SAASC,gBAAgBE,eAG3BC,QAAQC,IAAI,0BACRjB,IACJC,GAAW,GACXiB,YAAW,WAjBXhB,IACAC,MAkBG,OAfLgB,qBAAU,WACRhB,MACC,IAgBHgB,qBAAU,WAER,OADAT,OAAOU,iBAAiB,SAAUX,GAC3B,kBAAMC,OAAOW,oBAAoB,SAAUZ,MACjD,IAEH,IAAMa,EACJ,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,cAInB,OACE,sBAAKA,UAAU,MAAf,UACE,0DACA,qBAAKA,UAAU,mBAAf,SACE,uBAAOC,KAAK,OAAOC,YAAY,sBAEjC,qBAAKF,UAAU,kBAAf,SACGzB,EAAM4B,KAAI,SAACC,GACV,OACE,0BAAuBJ,UAAU,OAAjC,UACE,sBAAMA,UAAU,cAAhB,SAA+BI,EAAKC,KACpC,6BAAKD,EAAKE,QACV,4BAAIF,EAAKG,SAHGH,EAAKC,SAQxB5B,GAAWsB,MCnElBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,W","file":"static/js/main.10614223.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  let limit = 5;\n  let page = 1;\n\n  const fetchPosts = async () => {\n    setloading(true);\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${page}`\n    );\n    const data = await response.json();\n    setPosts((posts) => [...posts, ...data]);\n    setloading(false);\n  };\n\n  const loadMorePosts = () => {\n    page++;\n    fetchPosts();\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function handleScroll() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n      document.documentElement.offsetHeight\n    )\n      return;\n    console.log(\"Fetch more list items!\");\n    if (loading) return;\n    setloading(true);\n    setTimeout(() => {\n      loadMorePosts();\n    }, 1000);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const loader = (\n    <div className=\"loader\">\n      <div className=\"circle\"></div>\n      <div className=\"circle\"></div>\n      <div className=\"circle\"></div>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Infinite Scroll & Filter</h1>\n      <div className=\"filter-container\">\n        <input type=\"text\" placeholder=\"filter posts...\" />\n      </div>\n      <div className=\"posts-container\">\n        {posts.map((post) => {\n          return (\n            <article key={post.id} className=\"post\">\n              <span className=\"post-number\">{post.id}</span>\n              <h3>{post.title}</h3>\n              <p>{post.body}</p>\n            </article>\n          );\n        })}\n      </div>\n      {loading && loader}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}