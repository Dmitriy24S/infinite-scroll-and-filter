{"version":3,"sources":["components/Post.js","components/SearchBar.js","App.js","index.js"],"names":["Post","id","title","body","createMakrup","className","dangerouslySetInnerHTML","SearchBar","value","handleChange","type","placeholder","onChange","App","useState","posts","setPosts","filteredArr","setFilteredArr","setValue","loading","setloading","page","fetchPosts","a","fetch","response","json","data","useEffect","html","__html","filterPosts","match","filteredPosts","filter","post","indexOf","map","item","regexp","RegExp","replace","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","console","log","setTimeout","addEventListener","removeEventListener","scrollBtn","onClick","scrollTo","top","behavior","loader","e","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f07f7c8.chunk.js","sourcesContent":["const Post = ({ id, title, body, createMakrup }) => {\r\n  return (\r\n    <article key={id} className=\"post\">\r\n      <span className=\"post-number\">{id}</span>\r\n      <h3 dangerouslySetInnerHTML={createMakrup(title)}></h3>\r\n      <p dangerouslySetInnerHTML={createMakrup(body)}></p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","const SearchBar = ({ value, handleChange }) => {\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"filter posts...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useState, useEffect } from \"react\";\nimport { IoIosArrowUp } from \"react-icons/io\";\nimport Post from \"./components/Post\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [filteredArr, setFilteredArr] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [loading, setloading] = useState(false);\n\n  let limit = 5;\n  let page = 1;\n\n  // Initial fetch of first posts\n  const fetchPosts = async () => {\n    setloading(true);\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${page}`\n    );\n    const data = await response.json();\n    setPosts((posts) => [...posts, ...data]);\n    setloading(false);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  // Higlight searched input in posts\n  const createMakrup = (html) => {\n    return { __html: html };\n  };\n\n  // Filter posts by input\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    filterPosts();\n    var regex = /^\\s+$/;\n    // console.log(value.match(regex));\n  };\n\n  const filterPosts = () => {\n    // If no empty string in input then filter input text\n    var regex = /^\\s+$/;\n    if (value.match(regex) === null) {\n      let filteredPosts = posts\n        .filter((post) => post.title.indexOf(value) > -1 || post.body.indexOf(value) > -1)\n        .map((item) => {\n          const regexp = new RegExp(value, \"g\");\n          // console.log(item.title.indexOf(value) > -1);\n          if (item.title.indexOf(value) > -1 || item.body.indexOf(value) > -1) {\n            return {\n              ...item,\n              title: item.title.replace(regexp, `<mark>${value}</mark>`),\n              body: item.body.replace(regexp, `<mark>${value}</mark>`),\n            };\n          }\n          return item;\n        });\n      setFilteredArr(filteredPosts);\n    }\n  };\n\n  // Pass fetched posts into filtered array\n  useEffect(() => {\n    setFilteredArr(posts);\n    if (value !== \"\") {\n      filterPosts();\n    }\n  }, [posts, value]);\n\n  // Fetch on scroll to bottom\n  const loadMorePosts = () => {\n    page++;\n    fetchPosts();\n  };\n\n  function handleScroll() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n      document.documentElement.offsetHeight\n    )\n      return;\n    if (loading) return;\n    setloading(true);\n    console.log(\"Fetch more list items!\");\n    if (loading) return;\n    if (!loading) {\n      setTimeout(() => {\n        loadMorePosts();\n      }, 1000);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Scroll to top\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  const scrollBtn = (\n    <button className=\"scrollBtn\" onClick={scrollTop}>\n      <IoIosArrowUp /> Back to Top\n    </button>\n  );\n\n  // Loader\n  const loader = (\n    <div className=\"loader\">\n      <div className=\"circle\"></div>\n      <div className=\"circle\"></div>\n      <div className=\"circle\"></div>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Infinite Scroll & Filter</h1>\n      <SearchBar value={value} handleChange={handleChange} />\n      <div className=\"posts-container\">\n        {filteredArr.map((post) => {\n          return (\n            <Post\n              key={post.id}\n              id={post.id}\n              title={post.title}\n              body={post.body}\n              createMakrup={createMakrup}\n            />\n          );\n        })}\n      </div>\n      {loading && loader}\n      {scrollBtn}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}